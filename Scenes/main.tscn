[gd_scene load_steps=14 format=3 uid="uid://ppll40aikglu"]

[ext_resource type="Texture2D" uid="uid://c1nq14tr8i7tx" path="res://Assets/icon.svg" id="1_jjgbg"]
[ext_resource type="Script" uid="uid://dvigwbs12r4s5" path="res://Scripts/player.gd" id="2_bo1nx"]
[ext_resource type="Script" uid="uid://dmsc51op4juc0" path="res://Scripts/path_3d.gd" id="3_8gbba"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_bo1nx"]

[sub_resource type="Sky" id="Sky_8gbba"]
sky_material = SubResource("ProceduralSkyMaterial_bo1nx")

[sub_resource type="Environment" id="Environment_jjvhh"]
background_mode = 2
sky = SubResource("Sky_8gbba")

[sub_resource type="SpriteFrames" id="SpriteFrames_kry3j"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_jjgbg")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="BoxShape3D" id="BoxShape3D_8gbba"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_8gbba"]
albedo_texture = ExtResource("1_jjgbg")
uv1_scale = Vector3(3, 2, 1)

[sub_resource type="BoxMesh" id="BoxMesh_jjvhh"]
material = SubResource("StandardMaterial3D_8gbba")
size = Vector3(0.25, 0.25, 0.25)

[sub_resource type="Curve3D" id="Curve3D_jjvhh"]
_data = {
"points": PackedVector3Array(2.07016, 0.0263974, 1.30628, 0, 0.55, 0, 1, 0, 0, 0.55, 0, 0, -0.55, 0, 0, 0, 1, 0, 0, 0.55, 0, 0, -0.55, 0, -1, 0, 0, -0.55, 0, 0, 0.55, 0, 0, 0, -1, 0, 0, -0.55, 0, 0, 0, 0, 1, 0, 0),
"tilts": PackedFloat32Array(0, 0.785, 1.571, 2.356, 3.142)
}
point_count = 5

[sub_resource type="Shader" id="Shader_8gbba"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);

	NORMAL = normalize((MODEL_MATRIX * vec4(NORMAL, 0.0)).xyz);
	vec3 world_normal = (INV_VIEW_MATRIX * vec4(NORMAL, 0.0)).xyz;
	ALBEDO = albedo.rgb * albedo_tex.rgb * world_normal;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jjvhh"]
render_priority = 0
shader = SubResource("Shader_8gbba")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/albedo_texture_size = Vector2i(128, 128)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[node name="main" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_jjvhh")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]

[node name="world" type="AnimatedSprite3D" parent="."]
transform = Transform3D(10, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
visible = false
centered = false
sprite_frames = SubResource("SpriteFrames_kry3j")

[node name="player" type="CharacterBody3D" parent="."]
script = ExtResource("2_bo1nx")

[node name="CollisionShape3D" type="CollisionShape3D" parent="player"]
shape = SubResource("BoxShape3D_8gbba")

[node name="MeshInstance3D" type="MeshInstance3D" parent="player/CollisionShape3D"]
mesh = SubResource("BoxMesh_jjvhh")
skeleton = NodePath("../..")

[node name="mobius_path" type="Path3D" parent="."]
curve = SubResource("Curve3D_jjvhh")
script = ExtResource("3_8gbba")
points = 32
radius = 2.0
stripWidth = 1.0
stripThickness = 0.1
twists = 1

[node name="mobius_polygon" type="CSGPolygon3D" parent="mobius_path"]
polygon = PackedVector2Array(-0.25, 0.05, -0.25, -0.05, 0.25, -0.05, 0.25, 0.05)
mode = 2
path_node = NodePath("..")
path_interval_type = 1
path_interval = 0.1
path_simplify_angle = 0.0
path_rotation = 2
path_rotation_accurate = true
path_local = false
path_continuous_u = true
path_u_distance = 1.0
path_joined = false
material = SubResource("ShaderMaterial_jjvhh")

[node name="PathFollow3D" type="PathFollow3D" parent="mobius_path"]
transform = Transform3D(-4.37113e-08, 0.999997, -4.37127e-08, 0, -4.37113e-08, -1.00003, -0.999998, -4.37113e-08, 1.91074e-15, 1, 0, 0)

[node name="Camera3D" type="Camera3D" parent="."]

[node name="Label3D" type="Label3D" parent="Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.0978556)

[node name="Label3D2" type="Label3D" parent="Camera3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.2, 0.075, -0.15)
